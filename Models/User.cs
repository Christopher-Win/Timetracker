// *************************************************
// ***************** Written by: *******************
// ****************** Chris N. *********************
// *************************************************

using System.ComponentModel.DataAnnotations; // Provides attributes for validation, such as [Required] and [Key]
using System.ComponentModel.DataAnnotations.Schema; // Enables custom configurations for database fields, like [DatabaseGenerated]
using Microsoft.EntityFrameworkCore; // Provides Entity Framework Core features, such as defining indexes
using System.Text.Json.Serialization; // Enables control over JSON serialization behavior

namespace TimeTracker.Models
{
    // Adds a unique index to the 'NetID' property to ensure no duplicate NetIDs in the database
    [Index(nameof(NetID), IsUnique = true)]
    public class User
    {
        // Primary Key (auto-incremented by the database)
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)] // Specifies that the value is generated by the database
        public int Id { get; set; }

        // Unique identifier for the user, required and must be unique
        [Required] // Ensures that this field is mandatory
        public required string NetID { get; set; }

        // Role of the user, defaults to "Student" if not specified
        public string Role { get; set; } = "Student";

        // Group to which the user belongs, required
        [Required] // Ensures that this field is mandatory
        public int Group { get; set; }

        // User's first name (optional)
        public string FirstName { get; set; }

        // User's last name (optional)
        public string LastName { get; set; }

        // Password for the user account, required and must be a SHA-256 hash (64 characters)
        [Required]
        [MaxLength(64)] // Ensures the password does not exceed 64 characters (SHA-256 hash length)
        [JsonIgnore] // Prevents the password from being serialized into JSON responses
        public string Password { get; set; } // Defaults to UTDID or a similar policy

        // Indicates whether the user is using the default password (e.g., on first login)
        public bool IsDefaultPassword { get; set; } = true; // Default is true for new users

        // Timestamp indicating when the user was created
        public DateTime CreatedAt { get; set; } = DateTime.Now; // Automatically sets the current date and time

        // Navigation property for the user's time logs
        public List<TimeLog>? TimeLogs { get; set; } // Allows navigation to the user's TimeLogs

        // Navigation property for the peer reviews this user has given
        [JsonIgnore] // Prevents circular references in JSON serialization
        public ICollection<PeerReview>? ReviewsGiven { get; set; }

        // Navigation property for the peer reviews this user has received
        [JsonIgnore] // Prevents circular references in JSON serialization
        public ICollection<PeerReview>? ReviewsReceived { get; set; }
    }
}